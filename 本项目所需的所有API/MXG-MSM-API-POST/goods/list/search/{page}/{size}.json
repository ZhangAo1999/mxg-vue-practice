{
  "code": 2000,
  "flag": true,
  "message": "查询成功",
  "data": function({
    _req,
    Mock
  }) {
    if (_req.params.size == "10") {
      return Mock.mock({
        "total": 800, // 总记录数
        "rows|10": [{ // 返回当前页的记录数 10 条, 即每页显示 10 条记录
          "id|+1": (parseInt(_req.params.page) - 1) * 10 + 1,
          "name|5": "@cword",
          "code": "@word",
          "spec": "@integer(0,9)L", // 11个数字0-9间的数字
          "retailPrice": "@float(0, 100, 1, 3)", // 0-1000小数,1-3位小数位
          "purchasePrice": "@float(0, 100, 1, 3)", // 0-1000小数,1-3位小数位
          "storageNum": "@integer(0,500)", // 4选 其1
          "supplierName": "@ctitle"
        }]
      })
    } else if (_req.params.size == "20") {
      return Mock.mock({
        "total": 800, // 总记录数
        "rows|20": [{ // 返回当前页的记录数 10 条, 即每页显示 10 条记录
          "id|+1": (parseInt(_req.params.page) - 1) * 20 + 1,
          "name|5": "@cword",
          "code": "@word",
          "spec": "@integer(0,9)L", // 11个数字0-9间的数字
          "retailPrice": "@float(0, 100, 1, 3)", // 0-1000小数,1-3位小数位
          "purchasePrice": "@float(0, 100, 1, 3)", // 0-1000小数,1-3位小数位
          "storageNum": "@integer(0,500)", // 4选 其1
          "supplierName": "@ctitle"
        }]
      })
    } else {
      return Mock.mock({
        "total": 800, // 总记录数
        "rows|50": [{ // 返回当前页的记录数 10 条, 即每页显示 10 条记录
          "id|+1": (parseInt(_req.params.page) - 1) * 50 + 1,
          "name|5": "@cword",
          "code": "@word",
          "spec": "@integer(0,9)L", // 11个数字0-9间的数字
          "retailPrice": "@float(0, 100, 1, 3)", // 0-1000小数,1-3位小数位
          "purchasePrice": "@float(0, 100, 1, 3)", // 0-1000小数,1-3位小数位
          "storageNum": "@integer(0,500)", // 4选 其1
          "supplierName": "@ctitle"
        }]
      })
    }
  }
}